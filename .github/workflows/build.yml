name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target:
          - aarch64-unknown-linux-musl
        include:
          - target: aarch64-unknown-linux-musl
            container_platform: linux/arm64/v8
    env:
      registry: ghcr.io/${{ github.repository_owner }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: build binary
        run: |
          cargo build --release --target ${{ matrix.target }} --verbose
          mkdir -p target/context
          cp target/${{ matrix.target }}/release/fernbedienung target/context/
      - uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: get tag with date
        run: echo "tag=${{ env.registry }}/fernbedienung:$(date +%s)" >> $GITHUB_ENV
      - name: build image
        run: >
          podman build target/context
            --file -
            --platform ${{ matrix.container_platform }}
            --tag ${{ env.tag }}
            < Dockerfile
      - name: push image
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ env.tag }}
